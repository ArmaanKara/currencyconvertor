{"version":3,"sources":["component/currencyInput.js","App.js","reportWebVitals.js","index.js"],"names":["CurrencyInput","props","className","type","value","amount","onChange","ev","onAmountChange","target","id","currency","onCurrencyChange","currencies","map","App","useState","amount1","setAmount1","amount2","setAmount2","currency1","setCurrency1","currency2","setCurrency2","rates","setRates","useEffect","axios","get","then","response","data","handleAmount1Change","formatNumberLengthTo4","number","toFixed","Object","keys","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAwBeA,MApBf,SAAuBC,GACrB,OACE,sBAAKC,UAAU,QAAf,UACE,uBAAOC,KAAK,OAAOC,MAAOH,EAAMI,OAAQC,SAAU,SAAAC,GAAE,OAAIN,EAAMO,eAAeD,EAAGE,OAAOL,UACvF,wBAAQM,GAAG,WAAWN,MAAOH,EAAMU,SAAUL,SAAU,SAAAC,GAAE,OAAIN,EAAMW,iBAAiBL,EAAGE,OAAOL,QAA9F,SACGH,EAAMY,WAAWC,KAAK,SAAAH,GAAQ,OAC7B,wBAAQP,MAAOO,EAAf,SAA0BA,a,iBCoErBI,MAxEf,WAEE,MAA8BC,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAkCJ,mBAAS,OAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkCN,mBAAS,OAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAA0BR,mBAAS,IAAnC,mBAAOS,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACRC,IAAMC,IAAI,+EACPC,MAAK,SAAAC,GACJL,EAASK,EAASC,KAAKP,YAE1B,IAEHE,qBAAU,WACHF,GACHQ,EAAoB,KAGrB,CAACR,IAEJ,IAAMS,EAAsB,SAACC,GAC3B,OAAOA,EAAOC,QAAQ,IAGlBH,EAAsB,SAAChB,GAC3BG,EAAWc,EAAsBjB,EAAUQ,EAAMF,GAAaE,EAAMJ,KACpEH,EAAWD,IAoBb,OACE,sBAAKf,UAAU,MAAf,UACE,oDACA,4FAEA,cAAC,EAAD,CACEM,eAAgByB,EAChBrB,iBAxBsB,SAACS,GAC3BD,EAAWc,EAAsBjB,EAAUQ,EAAMF,GAAaE,EAAMJ,KACpEC,EAAaD,IAuBTR,WAAYwB,OAAOC,KAAKb,GACxBpB,OAAQY,EACRN,SAAUU,IAEZ,cAAC,EAAD,CACEb,eAzBoB,SAACW,GACzBD,EAAWgB,EAAsBf,EAAUM,EAAMJ,GAAaI,EAAMF,KACpEH,EAAWD,IAwBPP,iBArBsB,SAACW,GAC3BL,EAAWgB,EAAsBf,EAAUM,EAAMJ,GAAaI,EAAMF,KACpEC,EAAaD,IAoBTV,WAAYwB,OAAOC,KAAKb,GACxBpB,OAAQc,EACRR,SAAUY,IAEZ,kFC7DSgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.79158f40.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from \"prop-types\";\nimport './currencyInput.css';\n\nfunction CurrencyInput(props) {\n  return (\n    <div className=\"group\">\n      <input type=\"text\" value={props.amount} onChange={ev => props.onAmountChange(ev.target.value)} />\n      <select id=\"dropdown\" value={props.currency} onChange={ev => props.onCurrencyChange(ev.target.value)}>\n        {props.currencies.map((currency => (\n          <option value={currency}>{currency}</option>\n        )))}\n      </select>\n    </div>\n  );\n}\n\nCurrencyInput.propTypes = {\n  amount: PropTypes.number.isRequired,\n  currency: PropTypes.string.isRequired,\n  currencies: PropTypes.array,\n  onAmountChange: PropTypes.func,\n  onCurrencyChange: PropTypes.func,\n};\nexport default CurrencyInput;","import './App.css';\nimport CurrencyInput from './component/currencyInput';\nimport React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\n\nfunction App() {\n\n  const [amount1, setAmount1] = useState(1);\n  const [amount2, setAmount2] = useState(1);\n  const [currency1, setCurrency1] = useState('USD');\n  const [currency2, setCurrency2] = useState('CAD');\n  const [rates, setRates] = useState([])\n  \n  useEffect(() => {\n    axios.get('http://data.fixer.io/api/latest?access_key=fb297b61addd07b3e3b0d21197a377aa')\n      .then(response => {\n        setRates(response.data.rates)\n      })\n  }, [])\n\n  useEffect(() => {\n    if(!!rates){\n      handleAmount1Change(1)\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [rates])\n\n  const formatNumberLengthTo4=(number)=>{\n    return number.toFixed(2);\n  }\n\n  const handleAmount1Change = (amount1) => {\n    setAmount2(formatNumberLengthTo4(amount1 * rates[currency2] / rates[currency1]));\n    setAmount1(amount1);\n  }\n\n  const handleCurrency1Change=(currency1) =>{\n    setAmount2(formatNumberLengthTo4(amount1 * rates[currency2] / rates[currency1]));\n    setCurrency1(currency1);\n  }\n\n  const handleAmount2Change=(amount2)=> {\n    setAmount1(formatNumberLengthTo4(amount2 * rates[currency1] / rates[currency2]));\n    setAmount2(amount2);\n  }\n\n  const handleCurrency2Change=(currency2)=>{\n    setAmount1(formatNumberLengthTo4(amount2 * rates[currency1] / rates[currency2]));\n    setCurrency2(currency2);\n  }\n\n\n\n  return (\n    <div className=\"App\">\n      <h1>Currency Convertor</h1>\n      <h4>Find exchage rates between any two currencies in the world</h4>\n\n      <CurrencyInput \n        onAmountChange={handleAmount1Change}\n        onCurrencyChange={handleCurrency1Change}\n        currencies={Object.keys(rates)} \n        amount={amount1} \n        currency={currency1 }\n      />\n      <CurrencyInput\n        onAmountChange={handleAmount2Change} \n        onCurrencyChange={handleCurrency2Change}\n        currencies={Object.keys(rates)} \n        amount={amount2} \n        currency={currency2}\n      />\n      <h6>*Currency exchange rates are updated hourly*</h6>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}